<?xml version="1.0" encoding="UTF-8"?>
<!--

  All content copyright (c) 2003-2006 Terracotta, Inc.,
  except as may otherwise be noted in a separate copyright notice.
  All rights reserved

-->

<terracotta-config>
  <general>
    <server>
      <run-dso>true</run-dso>
      <admin-server>
      </admin-server>
    </server>
  </general>

  <dso-l2>
	 <gc-enabled>false</gc-enabled>
	 <gc-interval>10000</gc-interval>
	 <verbose-gc>true</verbose-gc>
	 <restartable>false</restartable>
	 <persistence-enabled>true</persistence-enabled>
	 <persistence-cache-size>100</persistence-cache-size>
  </dso-l2>

  <dso-l1>
    <maxObjectCount>100</maxObjectCount>
    <server>localhost</server>
    <classes>
    </classes>

    <locks>
     <lock>
       <method-expression>* dso.concurrency.SimpleTrade.incrementCounter()</method-expression>
       <lock-definition>
         <lock-name>tc:autolock</lock-name>
	 <lock-type>write</lock-type>
       </lock-definition>
     </lock>
     <lock>
       <method-expression>* dso.concurrency.SimpleTrade.getCounter()</method-expression>
       <lock-definition>
         <lock-name>tc:autolock</lock-name>
	 <lock-type>read</lock-type>
       </lock-definition>
     </lock>
     <lock>
       <method-expression>* dso.concurrency.ConcurrencyTester.clear(..)</method-expression>
       <lock-definition>
         <lock-name>tc:autolock</lock-name>
	 <lock-type>write</lock-type>
       </lock-definition>
     </lock>
     <lock>
       <method-expression>* dso.concurrency.ConcurrencyTester.incrementInRandomOrder(..)</method-expression>
       <lock-definition>
         <lock-name>tc:autolock</lock-name>
	 <lock-type>read</lock-type>
       </lock-definition>
     </lock>
     <lock>
       <method-expression>* dso.concurrency.ConcurrencyTester.initializeList(..)</method-expression>
       <lock-definition>
         <lock-name>tc:autolock</lock-name>
	 <lock-type>write</lock-type>
       </lock-definition>
     </lock>
     <lock>
       <method-expression>* dso.concurrency.ConcurrencyTester.awaitClients(..)</method-expression>
       <lock-definition>
         <lock-name>tc:autolock</lock-name>
	 <lock-type>write</lock-type>
       </lock-definition>
     </lock>
    </locks>

    <roots>
     <root>
        <class>dso.concurrency.ConcurrencyTester</class>
        <field>trades</field>
        <root-name>concurrency</root-name>
     </root>
     <root>
        <class>dso.concurrency.ConcurrencyTester</class>
        <field>clientSet</field>
        <root-name>clientSet</root-name>
     </root>
    </roots>

    <!-- Which classes should never be instrumented by DSO? This is a list of
         joint-point selection patterns. -->
    <excludes>
    </excludes> 

    <!-- Which classes inside the set of excludes above that makes them again
         eligible for DSO instrumentation.  This is also a list of join-point
         selection patterns. -->
    <includes>
      <include><value>dso..*</value></include>
    </includes>

    <distributed-methods>
    </distributed-methods>

    <applications>
    </applications>
  </dso-l1>

</terracotta-config>
