# class mappings

#com/tc/asm/Edge=com/tc/asm/a
#com/tc/asm/Item=com/tc/asm/b
#com/tc/asm/FieldWriter=com/tc/asm/c
#com/tc/asm/MethodWriter=com/tc/asm/d
#com/tc/asm/AnnotationWriter=com/tc/asm/e

# field mappings

com/tc/asm/AnnotationWriter.cw=a
com/tc/asm/AnnotationWriter.size=b
com/tc/asm/AnnotationWriter.named=c
com/tc/asm/AnnotationWriter.bv=d
com/tc/asm/AnnotationWriter.parent=e
com/tc/asm/AnnotationWriter.offset=f
com/tc/asm/AnnotationWriter.next=g
com/tc/asm/AnnotationWriter.prev=h

com/tc/asm/Attribute.next=a
com/tc/asm/Attribute.value=b

com/tc/asm/ByteVector.data=a
com/tc/asm/ByteVector.length=b

com/tc/asm/ClassReader.items=a
com/tc/asm/ClassReader.strings=c
com/tc/asm/ClassReader.maxStringLength=d
#com/tc/asm/ClassReader.header=e

com/tc/asm/ClassWriter.TYPE=a
com/tc/asm/ClassWriter.version=b
com/tc/asm/ClassWriter.index=c
com/tc/asm/ClassWriter.pool=d
com/tc/asm/ClassWriter.items=e
com/tc/asm/ClassWriter.threshold=f
com/tc/asm/ClassWriter.key=g
com/tc/asm/ClassWriter.key2=h
com/tc/asm/ClassWriter.key3=i
com/tc/asm/ClassWriter.access=j
com/tc/asm/ClassWriter.name=k
com/tc/asm/ClassWriter.signature=l
com/tc/asm/ClassWriter.superName=m
com/tc/asm/ClassWriter.interfaceCount=n
com/tc/asm/ClassWriter.interfaces=o
com/tc/asm/ClassWriter.sourceFile=p
com/tc/asm/ClassWriter.sourceDebug=q
com/tc/asm/ClassWriter.enclosingMethodOwner=r
com/tc/asm/ClassWriter.enclosingMethod=s
com/tc/asm/ClassWriter.anns=t
com/tc/asm/ClassWriter.ianns=u
com/tc/asm/ClassWriter.attrs=v
com/tc/asm/ClassWriter.innerClassesCount=w
com/tc/asm/ClassWriter.innerClasses=x
com/tc/asm/ClassWriter.firstField=y
com/tc/asm/ClassWriter.lastField=z
com/tc/asm/ClassWriter.firstMethod=A
com/tc/asm/ClassWriter.lastMethod=B
com/tc/asm/ClassWriter.computeMaxs=C
com/tc/asm/ClassWriter.typeCount=D
com/tc/asm/ClassWriter.typeTable=E
com/tc/asm/ClassWriter.thisName=F
com/tc/asm/ClassWriter.computeFrames=G
com/tc/asm/ClassWriter.computeMaxs=H
com/tc/asm/ClassWriter.invalidFrames=I
com/tc/asm/ClassWriter.cr=J
    
com/tc/asm/Edge.info=a
com/tc/asm/Edge.successor=b
com/tc/asm/Edge.next=c

com/tc/asm/Handler.start=a
com/tc/asm/Handler.end=b
com/tc/asm/Handler.handler=c
com/tc/asm/Handler.desc=d
com/tc/asm/Handler.type=e
com/tc/asm/Handler.next=f

com/tc/asm/FieldWriter.next=a
com/tc/asm/FieldWriter.cw=b
com/tc/asm/FieldWriter.access=c
com/tc/asm/FieldWriter.name=d
com/tc/asm/FieldWriter.desc=e
com/tc/asm/FieldWriter.signature=f
com/tc/asm/FieldWriter.value=g
com/tc/asm/FieldWriter.anns=h
com/tc/asm/FieldWriter.ianns=i
com/tc/asm/FieldWriter.attrs=j

com/tc/asm/Item.index=a
com/tc/asm/Item.type=b
com/tc/asm/Item.intVal=c
com/tc/asm/Item.longVal=d
com/tc/asm/Item.strVal1=g
com/tc/asm/Item.strVal2=h
com/tc/asm/Item.strVal3=i
com/tc/asm/Item.hashCode=j
com/tc/asm/Item.next=k

com/tc/asm/Label.status=a
com/tc/asm/Label.line=b
com/tc/asm/Label.position=c
com/tc/asm/Label.referenceCount=d
com/tc/asm/Label.srcAndRefPositions=e
com/tc/asm/Label.inputStackTop=f
com/tc/asm/Label.outputStackMax=g
com/tc/asm/Label.frame=h
com/tc/asm/Label.successor=i
com/tc/asm/Label.successors=j
com/tc/asm/Label.next=k

com/tc/asm/Frame.SIZE=a
com/tc/asm/Frame.owner=b
com/tc/asm/Frame.inputLocals=c
com/tc/asm/Frame.inputStack=d
com/tc/asm/Frame.outputLocals=e
com/tc/asm/Frame.outputStack=f
com/tc/asm/Frame.outputStackTop=g
com/tc/asm/Frame.initializationCount=h
com/tc/asm/Frame.initializations=i

com/tc/asm/MethodWriter.next=a
com/tc/asm/MethodWriter.cw=b
com/tc/asm/MethodWriter.access=c
com/tc/asm/MethodWriter.name=d
com/tc/asm/MethodWriter.desc=e
com/tc/asm/MethodWriter.descriptor=f
com/tc/asm/MethodWriter.signature=g
com/tc/asm/MethodWriter.classReaderOffset=h
com/tc/asm/MethodWriter.classReaderLength=i
com/tc/asm/MethodWriter.exceptionCount=j
com/tc/asm/MethodWriter.exceptions=k
com/tc/asm/MethodWriter.annd=l
com/tc/asm/MethodWriter.anns=m
com/tc/asm/MethodWriter.ianns=n
com/tc/asm/MethodWriter.panns=o
com/tc/asm/MethodWriter.ipanns=p
com/tc/asm/MethodWriter.attrs=q
com/tc/asm/MethodWriter.code=r
com/tc/asm/MethodWriter.maxStack=s
com/tc/asm/MethodWriter.maxLocals=t
com/tc/asm/MethodWriter.frameCount=u
com/tc/asm/MethodWriter.stackMap=v
com/tc/asm/MethodWriter.previousFrameOffset=w
com/tc/asm/MethodWriter.previousFrame=x
com/tc/asm/MethodWriter.frameIndex=y
com/tc/asm/MethodWriter.frame=z
com/tc/asm/MethodWriter.handlerCount=A
com/tc/asm/MethodWriter.firstHandler=B
com/tc/asm/MethodWriter.lastHandler=C
com/tc/asm/MethodWriter.localVarCount=D
com/tc/asm/MethodWriter.localVar=E
com/tc/asm/MethodWriter.localVarTypeCount=F
com/tc/asm/MethodWriter.localVarType=G
com/tc/asm/MethodWriter.lineNumberCount=H
com/tc/asm/MethodWriter.lineNumber=I
com/tc/asm/MethodWriter.cattrs=J
com/tc/asm/MethodWriter.resize=K
com/tc/asm/MethodWriter.subroutines=L
com/tc/asm/MethodWriter.compute=M
com/tc/asm/MethodWriter.labels=N
com/tc/asm/MethodWriter.previousBlock=O
com/tc/asm/MethodWriter.currentBlock=P
com/tc/asm/MethodWriter.stackSize=Q
com/tc/asm/MethodWriter.maxStackSize=R
com/tc/asm/MethodWriter.synthetics=S

com/tc/asm/Type.sort=a
com/tc/asm/Type.buf=b
com/tc/asm/Type.off=c
com/tc/asm/Type.len=d

com/tc/asm/signature/SignatureReader.signature=a

com/tc/asm/signature/SignatureWriter.buf=a
com/tc/asm/signature/SignatureWriter.hasFormals=b
com/tc/asm/signature/SignatureWriter.hasParameters=c
com/tc/asm/signature/SignatureWriter.argumentStack=d

# method mappings

com/tc/asm/AnnotationWriter.getSize()I=a
com/tc/asm/AnnotationWriter.put([Lcom/tc/asm/AnnotationWriter;ILcom/tc/asm/ByteVector;)V=a
com/tc/asm/AnnotationWriter.put(Lcom/tc/asm/ByteVector;)V=a

com/tc/asm/Attribute.getCount()I=a
com/tc/asm/Attribute.getSize(Lcom/tc/asm/ClassWriter;[BIII)I=a
com/tc/asm/Attribute.put(Lcom/tc/asm/ClassWriter;[BIIILcom/tc/asm/ByteVector;)V=a

com/tc/asm/ByteVector.enlarge(I)V=a
com/tc/asm/ByteVector.put11(II)Lcom/tc/asm/ByteVector;=a
com/tc/asm/ByteVector.put12(II)Lcom/tc/asm/ByteVector;=b

com/tc/asm/ClassReader.copyPool(Lcom/tc/asm/ClassWriter;)V=a
com/tc/asm/ClassReader.readAnnotationValue(I[CLjava/lang/String;Lcom/tc/asm/AnnotationVisitor;)I=a
com/tc/asm/ClassReader.readAnnotationValues(I[CZLcom/tc/asm/AnnotationVisitor;)I=a
com/tc/asm/ClassReader.readAttribute([Lcom/tc/asm/Attribute;Ljava/lang/String;II[CI[Lcom/tc/asm/Label;)Lcom/tc/asm/Attribute;=a
com/tc/asm/ClassReader.readClass(Ljava/io/InputStream;)[B=a
com/tc/asm/ClassReader.readParameterAnnotations(ILjava/lang/String;[CZLcom/tc/asm/MethodVisitor;)V=a
com/tc/asm/ClassReader.readUTF(II[C)Ljava/lang/String;=a
com/tc/asm/ClassReader.readFrameType([Ljava/lang/Object;II[C[Lcom/tc/asm/Label;)I=a

com/tc/asm/ClassWriter.get(Lcom/tc/asm/Item;)Lcom/tc/asm/Item;=a
com/tc/asm/ClassWriter.newClassItem(Ljava/lang/String;)Lcom/tc/asm/Item;=a
com/tc/asm/ClassWriter.newConstItem(Ljava/lang/Object;)Lcom/tc/asm/Item;=a
com/tc/asm/ClassWriter.newDouble(D)Lcom/tc/asm/Item;=a
com/tc/asm/ClassWriter.newFloat(F)Lcom/tc/asm/Item;=a
com/tc/asm/ClassWriter.newInteger(I)Lcom/tc/asm/Item;=a
com/tc/asm/ClassWriter.newLong(J)Lcom/tc/asm/Item;=a
com/tc/asm/ClassWriter.newMethodItem(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lcom/tc/asm/Item;=a
com/tc/asm/ClassWriter.newString(Ljava/lang/String;)Lcom/tc/asm/Item;=b
com/tc/asm/ClassWriter.put122(III)V=a
com/tc/asm/ClassWriter.put(Lcom/tc/asm/Item;)V=b
com/tc/asm/ClassWriter.newFieldItem(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/tc/asm/Item;=a
com/tc/asm/ClassWriter.addType(Ljava/lang/String;)I=c
com/tc/asm/ClassWriter.addUninitializedType(Ljava/lang/String;I)I=a
com/tc/asm/ClassWriter.addType(Lcom/tc/asm/Item;)Lcom/tc/asm/Item;=c
com/tc/asm/ClassWriter.getMergedType(II)I=a
com/tc/asm/ClassWriter.newNameTypeItem(Ljava/lang/String;Ljava/lang/String;)Lcom/tc/asm/Item;=a

com/tc/asm/FieldWriter.getSize()I=a
com/tc/asm/FieldWriter.put(Lcom/tc/asm/ByteVector;)V=a

com/tc/asm/Item.isEqualTo(Lcom/tc/asm/Item;)Z=a
com/tc/asm/Item.set(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V=a
com/tc/asm/Item.set(D)V=a
com/tc/asm/Item.set(F)V=a
com/tc/asm/Item.set(I)V=a
com/tc/asm/Item.set(J)V=a

com/tc/asm/Label.addReference(II)V=a
com/tc/asm/Label.put(Lcom/tc/asm/MethodWriter;Lcom/tc/asm/ByteVector;IZ)V=a
com/tc/asm/Label.resolve(Lcom/tc/asm/MethodWriter;I[B)Z=a
com/tc/asm/Label.getFirst()Lcom/tc/asm/Label;=a
com/tc/asm/Label.inSubroutine(J)Z=a
com/tc/asm/Label.inSameSubroutine(Lcom/tc/asm/Label;)Z=a
com/tc/asm/Label.addToSubroutine(JI)V=a
com/tc/asm/Label.visitSubroutine(Lcom/tc/asm/Label;JI)V=b

com/tc/asm/Frame.get(I)I=a
com/tc/asm/Frame.set(II)V=a
com/tc/asm/Frame.push(I)V=b
com/tc/asm/Frame.push(Lcom/tc/asm/ClassWriter;Ljava/lang/String;)V=a
com/tc/asm/Frame.type(Lcom/tc/asm/ClassWriter;Ljava/lang/String;)I=b
com/tc/asm/Frame.pop()I=a
com/tc/asm/Frame.pop(Ljava/lang/String;)V=a
com/tc/asm/Frame.pop(I)V=c
com/tc/asm/Frame.init(I)V=d
com/tc/asm/Frame.init(Lcom/tc/asm/ClassWriter;I)I=a
com/tc/asm/Frame.initInputFrame(Lcom/tc/asm/ClassWriter;I[Lcom/tc/asm/Type;I)V=a
com/tc/asm/Frame.execute(IILcom/tc/asm/ClassWriter;Lcom/tc/asm/Item;)V=a
com/tc/asm/Frame.merge(Lcom/tc/asm/ClassWriter;Lcom/tc/asm/Frame;I)Z=a
com/tc/asm/Frame.merge(Lcom/tc/asm/ClassWriter;I[II)Z=a

com/tc/asm/MethodWriter.visitSwitchInsn(Lcom/tc/asm/Label;[Lcom/tc/asm/Label;)V=a
com/tc/asm/MethodWriter.addSuccessor(ILcom/tc/asm/Label;)V=a
com/tc/asm/MethodWriter.getNewOffset([I[III)I=a
com/tc/asm/MethodWriter.getSize()I=a
com/tc/asm/MethodWriter.put(Lcom/tc/asm/ByteVector;)V=a
com/tc/asm/MethodWriter.readInt([BI)I=a
com/tc/asm/MethodWriter.readShort([BI)S=b
com/tc/asm/MethodWriter.readUnsignedShort([BI)I=c
com/tc/asm/MethodWriter.writeShort([BII)V=a
com/tc/asm/MethodWriter.visitFrame(Lcom/tc/asm/Frame;)V=b
com/tc/asm/MethodWriter.startFrame(III)V=a
com/tc/asm/MethodWriter.endFrame()V=b
com/tc/asm/MethodWriter.writeFrame()V=c
com/tc/asm/MethodWriter.resizeInstructions()V=d
com/tc/asm/MethodWriter.noSuccessor()V=e
com/tc/asm/MethodWriter.writeFrameTypes(II)V=a
com/tc/asm/MethodWriter.writeFrameType(Ljava/lang/Object;)V=a
com/tc/asm/MethodWriter.getNewOffset([I[ILcom/tc/asm/Label;)V=a

com/tc/asm/Type.getType([CI)Lcom/tc/asm/Type;=a
com/tc/asm/Type.getDescriptor(Ljava/lang/StringBuffer;)V=a
com/tc/asm/Type.getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V=a

com/tc/asm/signature/SignatureReader.parseType(Ljava/lang/String;ILcom/tc/asm/signature/SignatureVisitor;)I=a

com/tc/asm/signature/SignatureWriter.endFormals()V=a
com/tc/asm/signature/SignatureWriter.endArguments()V=b
     