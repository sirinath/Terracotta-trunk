<?xml version="1.0" encoding="UTF-8"?>
<!--

All content copyright Terracotta, Inc., unless otherwise indicated. All rights reserved.



-->
<!-- This is a Terracotta configuration file that has been pre-configured
for use with Tomcat.

For more information, please see the product documentation.
 -->
<tc:tc-config xmlns:tc="http://www.terracotta.org/config"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.terracotta.org/schema/terracotta-5.xsd">

  <!-- Tell DSO where the Terracotta server can be found -->
  <servers>
    <server host="localhost">
      <data>%(user.home)/terracotta/server-data</data>
      <logs>%(user.home)/terracotta/server-logs</logs>
    </server>
  </servers>

  <!-- Tell DSO where to put the generated client logs -->
  <clients>
    <logs>%(user.home)/terracotta/client-logs</logs>
    <modules>
      <!-- Include the Terracotta Integration Module for the appropriate version of 
      your sessions container.  You can view the list of supported TIMs with the 
      tim-get tool in the bin directory:
        bin/tim-get.sh list
      The TIM version will vary depending on the Terracotta release.  To get
      the correct version, use the tim-get tool in the bin directory to download the 
      latest appropriate version with a command like:
         bin/tim-get.sh install tim-tomcat-6.0
      -->
      <module name="tim-tomcat-6.0"/>
    </modules>
  </clients>

  <application>
    <dso>
      <!-- The following declarations tells DSO which classes should be instrumented to 
      allow sharing. When the app runs under DSO, shared instances of these classes will
      broadcast changes in their state.

      A good idiom when writing an app that you intend to cluster via TC DSO is to group the 
      classes you wish to share under a single package (although if you follow the MVC pattern
      this tends to happen naturally) - this way the list of classes you wish to instrument
      can be concise -->
      <instrumented-classes>
        <!-- Start by including just the classes you expect to get added to the shared 
        graph.  These typically include domain classes and shared data structures.  If you 
        miss classes, Terracotta will throw NonPortableOjectExceptions telling you more 
        about what needs to be added. -->
        <include>
          <class-expression>com.mydomain.myapp.mymodels..*</class-expression>
        </include>
      </instrumented-classes>

      <!-- Declare which web application context names should use DSO sessions -->
      <web-applications>
        <web-application>MyWebApp</web-application>
      </web-applications>
    </dso>
  </application>
</tc:tc-config>
