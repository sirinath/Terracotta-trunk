<?xml version="1.0" encoding="UTF-8"?>
<!--

  All content copyright (c) 2003-2006 Terracotta, Inc.,
  except as may otherwise be noted in a separate copyright notice.
  All rights reserved

-->
<!-- This is a Terracotta configuration file that has been pre-configured
for use with Tomcat Sessions.

For more information, please see the product documentation -->
<tc:tc-config xmlns:tc="http://www.terracotta.org/config">

  <!-- Tell DSO where the Terracotta server can be found; 
  See the Terracotta DSO Guide for additional information. -->
  <servers>
    <server name="localhost">
      <data>%(user.home)/terracotta/server-data</data>
      <logs>%(user.home)/terracotta/server-logs</logs>
    </server>
  </servers>

  <!-- Tell DSO where to put the generated client logs
  See the Terracotta DSO Guide for additional information. -->
  <clients>
    <logs>%(user.home)/terracotta/client-logs</logs>
  </clients>

  <application>
    <dso>
      <!-- Our app requires these custom objects/classes to be shared - the following declarations
      tells DSO which ones they are. When the app runs under DSO, instances of these classes
      will broadcast changes in their state.

      A good idiom when writing an app that you intend to cluster via TC DSO, is to group the 
      classes you wish to share under a single package (although if you follow the MVC pattern
      this tends to happen naturally) - this way the list of classes you wish to instrument
      can be concise -->
      <instrumented-classes>
        <!-- Start by including all classes for instrumentation.
        It's more efficient to instrument only those classes that
        hold shared roots or are part of a shared root graph -->
        <include>
          <class-expression>*..*</class-expression>
        </include>

        <!-- Exclude weblogic internals to improve performance of webapp loading. -->
        <exclude>weblogic..*</exclude>
        <exclude>com.rsa..*</exclude>
      </instrumented-classes>

      <!-- Declare your web application context names here. -->
      <web-applications>
        <web-application>MyWebApp</web-application>
      </web-applications>
    </dso>
  </application>
</tc:tc-config>
