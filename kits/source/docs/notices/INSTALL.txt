Preparing to Run a Terracotta Cluster
=====================================

This document is part of the Terracotta download for supported UNIX/Linux 
platforms and Microsoft Windows. For the latest supported platforms, 
including JVMs and application servers, see the Terracotta Platform Support 
page (http://www.terracotta.org/web/display/docs/Platform Support).

Use this installation document to ensure that your environment is ready to run 
a cluster with Terracotta.


General Considerations
----------------------
The following is a checklist of general preparedness issues:

* Operating systems are up to date, including patches.
* Java (JDK) is installed on all nodes.
* JAVA_HOME is set correctly for the user under which Terracotta will run.
* The network path between Terracotta server machines in the cluster is clean.
  A clean path has low latency (end-to-end Gigabit connections are recommended),
  and no packet loss.
  NOTE: In a production environment, it is likely that the Terracotta cluster
  will consist of at least one active server and one backup (or "hot standby") 
  server.
* The network path between Terracotta server machines and Terracotta client 
  machines is clean. Terracotta clients are the application servers in a 
  cluster. A clean path has low latency (end-to-end Gigabit connections are 
  recommended), and no packet loss.
* If Terracotta servers are configured to generate logs, be sure 
  there is enough space where the logs are stored. You can set the path for
  log files in the Terracotta configuration file (tc-config.xml by default) 
  using the <logs> element found in the <clients> section and in each 
  <server> section.
   

Creating the Terracotta Boot JAR
--------------------------------
Terracotta clients require a boot JAR that can be created using the script
make-boot-jar.sh (or make-boot-jar.bat), found in the Terracotta bin directory.
Run this script from the Terracotta bin directory on each Terracotta client.

There are other methods to create the Terracotta boot JAR, such as using the
Terracotta dso-java.sh (or dso-java.bat) script. You can find out more about
boot-JAR related scripts by searching the Terracotta Tools Catalog
(http://www.terracotta.org/web/display/docs/Tools+Overview).

Configuring Terracotta
----------------------
Terracotta is configured using a configuration file (tc-config.xml by default).
The major sections include <servers> (setting up Terracotta servers), <clients> 
(setting Terracotta clients or application servers), and <application> (the
application being clustered). If no configuration file is provided, a default 
configuration is used.

Servers can be configured with a name, bind (IP) address, and various ports.
Naming a server is recommended because it allows you to use that name when
executing commands and scripts that must refer to the server.

Clients are configured with Terracotta Integration Modules (TIMs) to
integrate Terracotta with popular technologies. The <application> section
contains the configuration that controls how Terracotta clusters your
application.

See tc-config-reference.xml in the Terracotta docs directory for an annotated 
version of the Terracotta configuration file.

Terracotta servers and clients can obtain configuration in different ways. One
way is to start the server with the following flag:

   -Dtc.config=<path/to/Terracotta/configuration/file>

Then start all clients with the following flag:

   -Dtc.config=<server IP or host address>:<DSO port number> 

Clients started this way obtain their configuration from the specified server 
(see Starting Terracotta, below).

See Working with Terracotta Configuration Files (http://www.terracotta.org/web/
display/docs/About+Terracotta+Configuration+Files) for more information on how 
Terracotta configuration is propagated.


Starting Terracotta
-------------------
The startup script for Terracotta servers is start-tc-server.sh (UNIX/Linux) or
start-tc-server.bat (Microsoft Windows). If you have configured more than one
Terracotta server, start a specific server by referring to its name with the -n
flag

For example, to start a server you named "myServer" from the Terracotta home
directory and using a specific configuration file, enter the following:

   start-tc-server.sh -n myServer -f <path/to/Terracotta/configuration/file>
   
For Microsoft Windows, enter the following:
   
   start-tc-server.bat -n myServer -f <path\to\Terracotta\configuration\file> 
   

More Information
----------------
You'll find a number of helpful guides in the documentation section of the 
Terracotta website (http://www.terracotta.org/web/display/orgsite/Documentation)
including the following:

* Guides on Running with Eclipse
** Clustering a Simple Swing Application (under Tutorials)
** Eclipse Plugin Guide (under Reference Documentation)
* Setting up Terracotta Server Arrays (under Reference Documentation)
* The Configuration Guide and Reference (under Reference)
