<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.terracotta</groupId>
    <artifactId>build-parent</artifactId>
    <version>4.0.0-SNAPSHOT</version>
    <relativePath>../build-parent</relativePath>
  </parent>

  <artifactId>terracotta-toolkit-runtime</artifactId>
  <name>terracotta-toolkit-runtime</name>
  <packaging>bundle</packaging>
  <description>Terracotta toolkit runtime</description>

  <properties>
    <terracotta-l1.artifactId>terracotta-l1</terracotta-l1.artifactId>
    <archive>${project.build.directory}/${project.artifactId}-${project.version}.jar</archive>
    <gmaven-plugin.version>1.4</gmaven-plugin.version>
    <toolkitContentFilename>toolkit-content.txt</toolkitContentFilename>
    <packagingTarget>classes</packagingTarget>
    <skipToolkitPackaging>false</skipToolkitPackaging>
  </properties>

  <dependencies>
    <!-- express impl -->
    <dependency>
      <groupId>org.terracotta.internal</groupId>
      <artifactId>build-data</artifactId>
      <version>${project.version}</version>
    </dependency>    
    <dependency>
      <groupId>org.terracotta.internal</groupId>
      <artifactId>toolkit-express-impl</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.terracotta.toolkit</groupId>
      <artifactId>terracotta-toolkit-api</artifactId>
      <version>${toolkit-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.terracotta.toolkit</groupId>
      <artifactId>terracotta-toolkit-api-internal</artifactId>
      <version>${toolkit-api.version}</version>
    </dependency>

    <!-- Stuff that goes into L1 -->
    <dependency>
      <groupId>org.terracotta</groupId>
      <artifactId>${terracotta-l1.artifactId}</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- stuff that goes into TIMs -->
    <dependency>
      <groupId>org.terracotta.internal</groupId>
      <artifactId>terracotta-toolkit-impl</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>${ehcache.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestFile>${project.build.directory}/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>     
  
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>unpack-sources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>org.terracotta.toolkit</includeGroupIds>
              <excludeArtifactIds/>
              <classifier>sources</classifier>
              <failOnMissingClassifierArtifact>true</failOnMissingClassifierArtifact>
              <outputDirectory>${project.build.directory}/sources</outputDirectory>
            </configuration>
          </execution>       
          <execution>
            <id>copy-javadoc</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <skip>${skipJavadoc}</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>org.terracotta.toolkit</groupId>
                  <artifactId>terracotta-toolkit-api</artifactId>
                  <version>${toolkit-api.version}</version>
                  <classifier>javadoc</classifier>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <destFileName>${project.artifactId}-${project.version}-javadoc.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>           
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <executions>   
          <execution>
            <id>shouldSkipAssembly</id>
            <phase>process-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                def toolkitContentFile = new File(project.build.outputDirectory, project.properties['toolkitContentFilename'])
                if (toolkitContentFile.exists()) {
                  println("Setting skipInternalJars=true");
                  project.properties.setProperty('skipInternalJars', 'true')
                } else {
                  project.properties.setProperty('skipInternalJars', 'false')
                } 
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>        
           
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.3</version><!--$NO-MVN-MAN-VER$-->
        <executions>
          <execution>
            <id>package-L1-and-TIMs</id>
            <configuration>
              <skipAssembly>${skipInternalJars}</skipAssembly>
              <finalName>${packagingTarget}</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>${basedir}/src/main/assembly/jar.xml</descriptor>
              </descriptors>
            </configuration>          
            <phase>prepare-package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>        
          <execution>
            <id>package-sources</id>
            <configuration>
              <appendAssemblyId>true</appendAssemblyId>
              <attach>true</attach>
              <descriptors>
                <descriptor>${basedir}/src/main/assembly/sources.xml</descriptor>
              </descriptors>
            </configuration>          
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>                  
        </executions>
      </plugin>

      <plugin>
        <groupId>org.terracotta</groupId>
        <artifactId>maven-forge-plugin</artifactId>
        <executions>         
          <execution>
            <id>process-toolkit-embeddedjars</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>parepareToolkitContent</goal>
            </goals>
            <configuration>
              <skip>${skipToolkitPackaging}</skip>
              <packagingDir>${project.build.outputDirectory}</packagingDir>
              <privateClassSuffix>.class_terracotta</privateClassSuffix>
              <toolkitContentFilename>${toolkitContentFilename}</toolkitContentFilename>
            </configuration>            
          </execution>
        </executions>
      </plugin>      
 
 
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>1.7.1</version>
        <configuration>
          <artifactSet>
            <includes>
              <include>org.terracotta.internal:toolkit-express-impl</include>
              <include>org.terracotta.toolkit:terracotta-toolkit-api</include>
              <include>org.terracotta.toolkit:terracotta-toolkit-api-internal</include>
              <include>org.terracotta.internal:build-data</include>
            </includes>
          </artifactSet>       
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>**/META-INF/maven/org.terracotta.toolkit/**</exclude>
                <exclude>**/META-INF/maven/org.terracotta.internal/**</exclude>
              </excludes>
            </filter>      
          </filters>    
          <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
          <keepDependenciesWithProvidedScope>false</keepDependenciesWithProvidedScope>
          <dependencyReducedPomLocation>${project.build.directory}/dependency-reduced-pom.xml</dependencyReducedPomLocation>
        </configuration>
        <executions>
          <execution>
            <id>shade-jar</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>    

      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <executions>
          <execution>
            <id>inject-correct-pom-to-jar</id>
            <phase>verify</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                def jarFile = new File(project.build.directory, "${project.artifactId}-${project.version}.jar")
                ant.jar(destfile: jarFile, update: "true") {
                  zipfileset(file: new File(project.build.directory, "dependency-reduced-pom.xml"), 
                             fullpath: "META-INF/maven/${project.groupId}/${project.artifactId}/pom.xml")
                }
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>      
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>attach-javadoc</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <skipAttach>${skipJavadoc}</skipAttach>
              <artifacts>
                <!-- sources artifact attached by default -->
                <artifact>
                  <file>${project.build.directory}/${project.artifactId}-${project.version}-javadoc.jar</file>
                  <type>jar</type>
                  <classifier>javadoc</classifier>
                </artifact>                
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>       
    <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.3.7</version>
        <extensions>true</extensions>
        <configuration>
          <manifestLocation>${project.build.directory}</manifestLocation>
          <instructions>
            <Import-Package>javax.naming,
            javax.management,
            javax.transaction.xa,
            org.w3c.dom,
            org.xml.sax,
            org.xml.sax.ext,
            org.xml.sax.helpers,
            javax.xml.parsers,
            javax.xml.namespace,
            javax.management.remote,
            javax.management.loading,
            javax.net.ssl</Import-Package>
            <Export-Package>org.terracotta.toolkit.*</Export-Package>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
            <Bundle-ClassPath>., {maven-dependencies}</Bundle-ClassPath>           
            <Include-Resource> {maven-resources}, {maven-dependencies}, target/classes </Include-Resource>
          </instructions>
          <excludeDependencies>*;scope=provided|runtime</excludeDependencies>
        </configuration>        
      </plugin>        
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>skip-javadoc</id>
      <activation>
        <file>
          <exists>${user.home}/.skipjavadoc</exists>
        </file>
      </activation>
      <properties>
        <skipJavadoc>true</skipJavadoc>
      </properties>
    </profile>
    
    <profile>
      <id>devmode</id>      
      <activation>
        <file>
          <exists>${user.home}/.devmode</exists>
        </file>
      </activation>      
      <properties>
        <skipToolkitPackaging>true</skipToolkitPackaging>
        <packagingTarget>packaging</packagingTarget>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <executions>
              <execution>
                <id>create-devmode-class-file</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>
                    println "================== devmode ===================="
                    def packagingDir = new File(project.build.directory, project.properties['packagingTarget'])
                    def toolkitDevmodeClasspath = new File(project.build.outputDirectory, 'devmode-embedded-classpath.txt')
                    toolkitDevmodeClasspath.withWriter{ out -&gt;
                      packagingDir.eachFileRecurse  {
                        if (it.name.endsWith('.jar')) {
                          def jarFile = new java.util.zip.ZipFile(it)
                          def classDirEntry = jarFile.getEntry("devmode-classdir.txt")
                          if (classDirEntry != null) {
                            out.println jarFile.getInputStream(classDirEntry).text
                          } else {
                            out.println(it)
                          }
                        }
                      }
                    }
                    // create empty toolkit content file 
                    new File(project.build.outputDirectory, project.properties['toolkitContentFilename']).withWriter { out -&gt;
                      out.println("")
                    }
                  </source>
                </configuration>
              </execution>
            </executions>              
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  
  <repositories>
    <repository>
      <id>terracotta-releases</id>
      <url>http://www.terracotta.org/download/reflector/releases</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>terracotta-releases</id>
      <url>http://www.terracotta.org/download/reflector/releases</url>
    </pluginRepository>
  </pluginRepositories>

</project>
