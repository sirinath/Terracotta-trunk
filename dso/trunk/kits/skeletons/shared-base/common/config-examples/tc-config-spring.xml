<?xml version="1.0" encoding="UTF-8" ?>
<!--

All content copyright Terracotta, Inc., unless otherwise indicated. All rights reserved.



-->
<!--
 This is a sample Terracotta configuration file for use with DSO spring.

 For more information, please see the product documentation.
-->
<tc:tc-config xmlns:tc="http://www.terracotta.org/config"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.terracotta.org/schema/terracotta-5.xsd">

  <!-- Tell DSO where the Terracotta server can be found. -->
  <servers>
    <server host="localhost">
      <data>%(user.home)/terracotta/server-data</data>
      <logs>%(user.home)/terracotta/server-logs</logs>
    </server>
  </servers>

  <!-- Tell DSO where to put the generated client logs -->  
  <clients>
    <logs>%(user.home)/terracotta/client-logs</logs>
  </clients>

  <application>
    <spring>

      <!-- The JEE application name is in most cases the name of the WAR, EAR
           or JAR file in which the Spring application resides. If you are
           using Spring in a stand-alone application then you can use "*" as
           the name. The pattern matching supports wildcards of leading and
           ending asterisk (*), which matches an arbitrary number of
           characters. -->
      <jee-application name="name-of-jee-application">

        <!-- Turns on clustering of the HTTP session. Needed for f.e. Spring
             WebFlow clustering. -->
        <session-support>false</session-support>

        <application-contexts>
          <application-context>

            <!-- Specifies the bean definition resource patterns; The matching
                 applys OR logic for individual path element. -->
            <paths>
              <path>*/beanfactory1.xml</path>
              <path>*/beanfactory2.xml</path>
            </paths>

            <!-- Specifies the Spring beans to cluster/share; The bean name
                 should be the same name that the bean has in the Spring bean
                 config file. Matching has to be exact; -->
            <beans>

              <bean name="clusteredBeanOne">
                <!-- Specifies the names of non-distributed field references
                     within a Spring bean instance. They are used for
                     identifying the fields that need to maintain a local
                     value (e.g. NOT be shared/clustered). -->
                <non-distributed-field>myFieldOne</non-distributed-field>
                <non-distributed-field>myFieldTwo</non-distributed-field>
              </bean>

              <bean name="clusteredBeanTwo"/>
            </beans>

            <!-- Specifies what event types published in this application
                 context should be distributed to other cluster nodes (but
                 still local within the same "logical" applicationcontext). -->
            <distributed-events>
              <distributed-event>com.mycompany.pkgb.*</distributed-event>
            </distributed-events>

          </application-context>
        </application-contexts>

      </jee-application>
    </spring>

  </application>
</tc:tc-config>
